{
  "name": "mapping-stream",
  "version": "0.1.0",
  "description": "Turn an asynchronous function into a through stream",
  "keywords": [],
  "author": {
    "name": "Raynos",
    "email": "raynos2@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/Raynos/mapping-stream.git"
  },
  "main": "index",
  "homepage": "https://github.com/Raynos/mapping-stream",
  "contributors": [
    {
      "name": "Jake Verbaten"
    }
  ],
  "bugs": {
    "url": "https://github.com/Raynos/mapping-stream/issues",
    "email": "raynos2@gmail.com"
  },
  "dependencies": {
    "read-write-stream": "~0.1.0"
  },
  "devDependencies": {
    "tap": "~0.3.1",
    "read-stream": "~0.4.1",
    "write-stream": "~0.4.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/Raynos/mapping-stream/raw/master/LICENSE"
    }
  ],
  "scripts": {
    "test": "tap --stderr --tap ./test"
  },
  "readme": "# mapping-stream\n\nTurn an asynchronous function into a through stream\n\n## Example\n\n``` js\nvar from = require(\"read-stream\").fromArray\n    , to = require(\"write-stream\").toArray\n\n    , map = require(\"mapping-stream\")\n\nfrom([1,2,3])\n    .pipe(map(function (item, cb) {\n        setTimeout(function() {\n            cb(null, item * 2)\n        }, 1000);\n    }))\n    .pipe(map(function (item) {\n        return item * 2\n    }))\n    .pipe(to([], function toList (list) {\n        console.log(\"list\", list)\n    }))\n\n```\n\n## Installation\n\n`npm install mapping-stream`\n\n## Contributors\n\n - Raynos\n\n## MIT Licenced\n",
  "readmeFilename": "README.md",
  "_id": "mapping-stream@0.1.0",
  "dist": {
    "shasum": "fdcad5c8dc68435167135cedb3c9829f8837389d"
  },
  "_from": "mapping-stream"
}
